name: Fetch Random GIF Line

on:
  schedule:
    - cron: '0 * * * *'  # toutes les heures
  workflow_dispatch:

jobs:
  update-gif-line:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch a random GIF line
        env:
          GIPHY_API_KEY: ${{ secrets.GIPHY_API_KEY }}
          GIPHY_NAME_CAT: ${{ vars.GIPHY_NAME_CAT }}
        run: |
          # Choisir une cat√©gorie au hasard
          IFS=',' read -r -a CATEGORIES <<< "$GIPHY_NAME_CAT"
          RANDOM_CATEGORY=${CATEGORIES[$RANDOM % ${#CATEGORIES[@]}]}
          echo "üé≤ Selected category: $RANDOM_CATEGORY"

          # Requ√™te Giphy
          RESPONSE=$(curl -s "https://api.giphy.com/v1/gifs/search?api_key=$GIPHY_API_KEY&q=$RANDOM_CATEGORY&limit=1&offset=0&rating=g&lang=en")
          GIF_URL=$(echo "$RESPONSE" | jq -r ".data[0].images.original.url" | sed 's/\?.*$//')

          # V√©rification
          if [ -z "$GIF_URL" ] || [ "$GIF_URL" = "null" ]; then
            echo "‚ùå GIF not found."
            exit 0
          fi

          echo "![Trending GIF]($GIF_URL)" > gif_line.md
          cat gif_line.md

      - name: Commit and push GIF line
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          if git diff --quiet; then
            echo "‚ÑπÔ∏è No changes to commit."
          else
            git add gif_line.md
            git commit -m "üéâ Update GIF line"
            git push
          fi
